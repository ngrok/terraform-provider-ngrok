// Code generated by apic. DO NOT EDIT.

package ngrok

import (
	"fmt"
	"testing"

	"github.com/hashicorp/terraform-plugin-sdk/helper/resource"
	"github.com/hashicorp/terraform-plugin-sdk/terraform"
)

var (
	resourceSSHCredentials_createConfig = `resource "ngrok_ssh_credential" "example" {
  acl = [ "bind:1.tcp.ngrok.io:20002", "bind:132.devices.company.com" ]
  description = "for device #132"
  public_key = "ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQDmGS49FkSODAcKhn3+/47DW2zEn19BZvzRQ8RZjL3v6hCIX2qXfsFK35EGxNI0wV23H4xXC2gVRPHKU71YnCb50tad3yMBTM6+2yfGsEDasEH/anmBLclChKvuGiT547RskZlpbAbdq3GvbzmY+R/2EBRMOiObpc8XmSzKAd05j28kqN0+rZO65SWId0MXdvJdSCSAnuRqBNd/aXKlu8hBPDcgwbT2lMkuR+ApoBS2FLRBOiQyt2Ol0T7Uuf7lTLlazpGB3uTw5zFYUNXkuuI6cAP8QYuY1Bne/hNrG8t3Aw9a1yc2C4Fz1hJ/4OMRxTQ8SUQf+Rmxs8DryMlMFJ8r device132@example.com"
}`
	resourceSSHCredentials_updateConfig = `resource "ngrok_ssh_credential" "example" {
  description = "my dev machine"
  metadata = "{\"hostname\": \"macbook.local\"}"
}`
)

func TestAccResourceSSHCredentials(t *testing.T) {

	resource.Test(t, resource.TestCase{
		Providers:    testAccProviders,
		PreCheck:     func() { testAccPreCheck(t) },
		CheckDestroy: testAccCheckDestroySSHCredentials,
		Steps: []resource.TestStep{
			{
				Config: resourceSSHCredentials_createConfig,
				// Check: resource.ComposeAggregateTestCheckFunc(
				// 	testAccCheckCreateSSHCredentials,
				// ),
			},
		},
	})
}

func testAccCheckDestroySSHCredentials(s *terraform.State) (err error) {
	return err
}

func testAccCheckCreateSSHCredentials(s *terraform.State) (err error) {
	fmt.Sprintf("state=%#v", s)
	return err
}
