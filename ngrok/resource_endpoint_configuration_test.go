// Code generated by apic. DO NOT EDIT.

package ngrok

import (
	"fmt"
	"testing"

	"github.com/hashicorp/terraform-plugin-sdk/helper/resource"
	"github.com/hashicorp/terraform-plugin-sdk/terraform"
)

var (
	resourceEndpointConfigurations_createConfig = `resource "ngrok_endpoint_configuration" "example" {
  description = "app servers"
  request_headers {
    add = {
      X-Frontend = "ngrok"
    }
    remove = [ "Cache-Control" ]
  }
  type = "https"
}`
	resourceEndpointConfigurations_updateConfig = `resource "ngrok_endpoint_configuration" "example" {
  ip_policy {
  }
}`
)

func TestAccResourceEndpointConfigurations(t *testing.T) {
	t.Skip("Test skipped. See: https://github.com/ngrok-private/ngrok/issues/4722")
	resource.Test(t, resource.TestCase{
		Providers:    testAccProviders,
		PreCheck:     func() { testAccPreCheck(t) },
		CheckDestroy: testAccCheckDestroyEndpointConfigurations,
		Steps: []resource.TestStep{
			{
				Config: resourceEndpointConfigurations_createConfig,
				// Check: resource.ComposeAggregateTestCheckFunc(
				// 	testAccCheckCreateEndpointConfigurations,
				// ),
			},
		},
	})
}

func testAccCheckDestroyEndpointConfigurations(s *terraform.State) (err error) {
	return err
}

func testAccCheckCreateEndpointConfigurations(s *terraform.State) (err error) {
	fmt.Sprintf("state=%#v", s)
	return err
}
