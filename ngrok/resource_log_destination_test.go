// Code generated by apic. DO NOT EDIT.

package ngrok

import (
	"fmt"
	"testing"

	"github.com/hashicorp/terraform-plugin-sdk/helper/resource"
	"github.com/hashicorp/terraform-plugin-sdk/terraform"
)

var (
	resourceLogDestinations_createConfig = `resource "ngrok_log_destination" "example" {
  description = "kinesis dev stream"
  format = "json"
  metadata = "{\"environment\":\"dev\"}"
  target {
    kinesis {
      auth {
        creds {
          aws_access_key_id = "AKIAIOSFODNN7EXAMPLE"
          aws_secret_access_key = "wJalrXUtnFEMI/K7MDENG/bPxRfiCYEXAMPLEKEY"
        }
      }
      stream_arn = "arn:aws:kinesis:us-east-2:123456789012:stream/mystream2"
    }
  }
}`
	resourceLogDestinations_updateConfig = `resource "ngrok_log_destination" "example" {
  description = "kinesis dev stream 1 of 3"
  metadata = "{\"environment\":\"dev\", \"stream\":1}"
}`
)

func TestAccResourceLogDestinations(t *testing.T) {
	t.Skip("Test skipped. See: https://github.com/ngrok-private/ngrok/issues/4723")
	resource.Test(t, resource.TestCase{
		Providers:    testAccProviders,
		PreCheck:     func() { testAccPreCheck(t) },
		CheckDestroy: testAccCheckDestroyLogDestinations,
		Steps: []resource.TestStep{
			{
				Config: resourceLogDestinations_createConfig,
				// Check: resource.ComposeAggregateTestCheckFunc(
				// 	testAccCheckCreateLogDestinations,
				// ),
			},
		},
	})
}

func testAccCheckDestroyLogDestinations(s *terraform.State) (err error) {
	return err
}

func testAccCheckCreateLogDestinations(s *terraform.State) (err error) {
	fmt.Sprintf("state=%#v", s)
	return err
}
